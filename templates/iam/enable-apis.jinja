{% set boomiSA = properties["boomisa"] %}
{% set enableCloudApis = properties["enableCloudApis"] %}
{% set deployment = env["deployment"] %}
{% set project = env["project"] %}

resources:
{% for api in enableCloudApis %}
- name: {{ deployment + '-enable-api-' + api }}
  action: 'gcp-types/servicemanagement-v1:servicemanagement.services.enable'
  properties:
    consumerId: {{ 'project:' + project }}
    serviceName: {{ api }}
{% endfor %}

{# Get the IAM policy first so that we do not remove any existing bindings. #}
- name: {{ deployment  + '-get-iam-policy' }}
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.getIamPolicy
  properties:
    resource: {{ project }}
  metadata:
    runtimePolicy:
      - UPDATE_ALWAYS

- name: {{ deployment  + '-patch-iam-policy' }}
  action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.setIamPolicy
  properties:
    resource: {{ project }}
    policy: $(ref.{{ deployment  + '-get-iam-policy' }})
    gcpIamPolicyPatch:
      add:
      - role: roles/container.admin
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
        - {{ 'serviceAccount:' + env['project_number'] + '@cloudservices.gserviceaccount.com' }}
      - role: roles/iam.serviceAccountUser
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      - role: roles/servicemanagement.admin
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      - role: roles/compute.instanceAdmin
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      - role: roles/storage.admin
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      - role: roles/logging.logWriter
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      - role: roles/monitoring.metricWriter
        members:
        - {{ 'serviceAccount:' +  boomiSA }}
      remove: []
  metadata:
    runtimePolicy:
      - UPDATE_ALWAYS
