{% set project = env["project"] %}
{% set deployment = env["deployment"] %}
{% set region = properties["region"] %}
{% set CLUSTER_NAME = deployment + '-gke-cluster' %}
{% set CommonTags = properties["CommonTags"] %}

{% set TYPE_NAME = deployment + '-type' %}
{% set RBAC_TYPE_NAME = TYPE_NAME + '-rbac-v1' %}
{% set APPS_TYPE_NAME = TYPE_NAME + '-apps-v1' %}

{# A dictionary mapping type name suffixes to the corresponding Kubernetes API endpoint. #}
{% set K8S_ENDPOINTS = {'': 'api/v1', '-v1beta1-extensions': 'apis/extensions/v1beta1', '-rbac-v1': 'apis/rbac.authorization.k8s.io/v1', '-apps-v1': 'apis/apps/v1/'}  %}


{% set VM_OAUTH_SCOPES = ['https://www.googleapis.com/auth/cloud-platform', 'https://www.googleapis.com/auth/compute', 'https://www.googleapis.com/auth/devstorage.read_only', 'https://www.googleapis.com/auth/logging.write', 'https://www.googleapis.com/auth/monitoring', 'https://www.googleapis.com/auth/cloud_debugger'] %}

{% set GKE_CLUSTER_SA = deployment + '-vm' %}

resources:
- name: {{ GKE_CLUSTER_SA }}
  type: gcp-types/iam-v1:projects.serviceAccounts
  properties:
    accountId: {{ GKE_CLUSTER_SA }}
    displayName: Service Account used for Kubeflow admin actions.
  accessControl:
    gcpIamPolicy:
    bindings:
    - role: roles/container.admin
      members:
      - {{ 'serviceAccount:' + env['project_number'] + '@cloudservices.gserviceaccount.com' }}
    - role: roles/container.admin
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/servicemanagement.admin
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/compute.instanceAdmin
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/storage.admin
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/dataflow.admin
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/logging.logWriter
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
    - role: roles/monitoring.metricWriter
      members:
      - {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}

- name: enable-gke-api
  action: 'gcp-types/servicemanagement-v1:servicemanagement.services.enable'
  properties:
    consumerId: {{ 'project:' + env['project'] }}
    serviceName: container.googleapis.com

- name: enable-gkeconnect-api
  action: 'gcp-types/servicemanagement-v1:servicemanagement.services.enable'
  properties:
    consumerId: {{ 'project:' + env['project'] }}
    serviceName: gkeconnect.googleapis.com

- name: {{ CLUSTER_NAME }}
  {% if properties['gkeApiVersion'] == 'v1beta1' %}
  type: gcp-types/container-v1beta1:projects.locations.clusters
  {% else %}
  type: container.v1.cluster
  {% endif %}
  properties:
    parent: projects/{{ env['project'] }}/locations/{{ properties['region'] }}
    # zone: {{ properties['zone'] }}
    cluster:
      name: {{ CLUSTER_NAME }}

      network: {{ properties["network"] }}
      subnetwork: {{ properties["subnet"] }}

      initialClusterVersion: 1.17.12-gke.1501
      currentMasterVersion: 1.17.12-gke.1501

      loggingService: logging.googleapis.com/kubernetes
      monitoringService: monitoring.googleapis.com/kubernetes

      addonsConfig:
        httpLoadBalancing:
          disabled: false
        horizontalPodAutoscaling:
          disabled: true
        gcePersistentDiskCsiDriverConfig:
          enabled: false

      resourceLabels: {{ properties["CommonTags"] }}
      autoscaling:
        enableNodeAutoprovisioning: true
        resourceLimits: 
        - resourceType: cpu
          minimum: 1
          maximum: 10
        - resourceType: memory
          minimum: 1
          maximum: 20
        autoprovisioningNodePoolDefaults:
          serviceAccount: {{ 'serviceAccount:' + GKE_CLUSTER_SA + '@' + env['project'] + '.iam.gserviceaccount.com' }}
          oauthScopes: {{ VM_OAUTH_SCOPES }}
      networkPolicy:
        provider: CALICO
        enabled: true
      maintenancePolicy:
        window:
          recurringWindow:
            window:
              startTime: "2020-11-01T07:00:25Z"
              endTime: "2021-11-01T07:00:25Z"
            recurrence: "FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU"
      workloadIdentityConfig:
        workloadPool: {{ env['project'] }}.svc.id.goog

      {#% if properties['gkeApiVersion'] == 'v1beta1' %}
      podSecurityPolicyConfig:
        enabled: {{ properties['securityConfig']['podSecurityPolicy'] }}
      {% endif %#}

      {% if properties['securityConfig']['privatecluster'] %}
      ipAllocationPolicy:
        createSubnetwork: false
        useIpAliases: true
      masterIpv4CidrBlock: {{ properties['securityConfig']['masterIpv4CidrBlock'] }}
      masterAuthorizedNetworksConfig: {{ properties['securityConfig']['masterAuthorizedNetworksConfig'] }}
      privateCluster: {{ properties['securityConfig']['privatecluster'] }}
      privateClusterConfig:
        enablePrivateEndpoint: {{ properties['securityConfig']['privatecluster'] }}
        enablePrivateNodes: {{ properties['securityConfig']['privatecluster'] }}
      {% endif %}

      nodePools:
      - name: {{ CLUSTER_NAME }}-node-pool-1
        version: 1.17.12-gke.1501
        config:
          labels:
            topology.kubernetes.io/region
        autoscaling:
          enabled: true
          minNodeCount: {{ properties["minNodeCount"] }}
          maxNodeCount: {{ properties["maxNodeCount"] }}
        initialNodeCount: {{ properties["desiredNodeCount"] }}
        management:
          autoUpgrade: true
          autoRepair: true
        config:
          {% if properties['securityConfig']['secureNodeMetadata'] %}
          workloadMetadataConfig:
            nodeMetadata: SECURE
          {% endif %}
          machineType: {{ properties["gkeMachineType"] }}
          diskSizeGb: 20
          oauthScopes: {{ VM_OAUTH_SCOPES }}
          serviceAccount: {{ GKE_CLUSTER_SA }}@{{ env['project'] }}.iam.gserviceaccount.com
  metadata:
    dependsOn:
    - {{ GKE_CLUSTER_SA }}
    - enable-gke-api
    - enable-gkeconnect-api

outputs:
- name: gkeClusterName
  value: $(ref.{{ CLUSTER_NAME }}.name)